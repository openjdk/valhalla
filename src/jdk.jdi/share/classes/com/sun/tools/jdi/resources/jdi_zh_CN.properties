#
# Copyright (c) 2010, 2023, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

true = true
false = false
version_format = Java 调试接口 (参考实现) 版本 {0}.{1}\n{2}
raw.command = 用于启动调试应用程序 VM 的原始命令
raw.command.label = 命令
raw.address = 运行原始命令之后, 监听连接时使用的地址
raw.address.label = 地址
raw.quote = 用于将以空格分隔的文本组合为一个命令行参数的字符
raw.quote.label = 引号
raw.description = 使用用户指定的命令行启动目标并附加到该目标
sun.home = 用于启动应用程序的 SDK 或运行时环境的主目录
sun.home.label = 主目录
sun.options = 已启动的 VM 选项
sun.options.label = 选项
sun.main = 主类和参数, 或者如果 -jar 是一个选项, 则为主 jar 文件和参数
sun.main.label = 主
sun.init_suspend = 在执行主类之前, 将挂起所有线程
sun.init_suspend.label = 挂起
sun.quote = 用于将以空格分隔的文本组合为一个命令行参数的字符
sun.quote.label = 引号
sun.vm_exec = Java VM 启动程序的名称
sun.vm_exec.label = 启动程序
sun.include_virtualthreads = 所有线程列表包含虚拟线程和平台线程。
sun.include_virtualthreads.label = 包括虚拟线程
sun.description = 使用 Sun Java VM 命令行启动目标并附加到该目标
generic_attaching.address = VM 连接所附加到的地址
generic_attaching.address.label = 地址
generic_attaching.timeout = 等待附加操作时的超时
generic_attaching.timeout.label = 超时
generic_listening.address = 监听 VM 连接时使用的地址
generic_listening.address.label = 地址
generic_listening.timeout = 等待连接时的超时
generic_listening.timeout.label = 超时
socket_transportservice.description = 使用 TCP 连接来连接调试器和被调试进程
memory_transportservice.description = 使用共享内存连接来连接调试器和被调试进程
socket_attaching.host = VM 连接所附加到的计算机名称
socket_attaching.host.label = 主机
socket_attaching.port = VM 连接所附加到的端口号
socket_attaching.port.label = 端口
socket_attaching.description = 通过套接字附加到其他 VM
socket_listening.localaddr = 监听程序绑定到的本地地址
socket_listening.localaddr.label = 本地地址
socket_listening.port = 监听 VM 连接时使用的端口号
socket_listening.port.label = 端口
socket_listening.description = 接受由其他 VM 启动的套接字连接
memory_attaching.name = VM 连接所附加到的共享内存区域的名称
memory_attaching.name.label = 名称
memory_attaching.description = 通过共享内存附加到其他 VM
memory_listening.name = 监听 VM 连接时所在的共享内存区域的名称
memory_listening.name.label = 名称
memory_listening.description = 接受由其他 VM 启动的共享内存连接
process_attaching.description = 通过进程 ID (PID) 附加到被调试进程
process_attaching.pid = PID
process_attaching.pid.label = 被调试进程的进程 ID (PID)
