# Copyright (c) 2010, 2022, Oracle and/or its affiliates. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#   - Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#
#   - Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
#   - Neither the name of Oracle nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
# IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

# This properties file is used to create a PropertyResourceBundle
# It contains Locale specific strings used in the SwingSet demo.
#
# @author Jeff Dinkins

#################################
###  SwingSet Infrastructure  ###
#################################

### About Box ###

AboutBox.title=Swingについて
AboutBox.ok_button_text=OK
AboutBox.accessible_description=Copyright (c) 2011, Oracle and/or its affiliates. All rights reserved.

### Source Code ###
SourceCode.loading=<html><body bgcolor="#ffffff">ソース・コードの読込みおよびフォーマット中です。少々お待ちください...</body></html>

### Status ###

Status.loading=読込み中:
Status.popupMenuAccessible=Shift+F10: ポップアップ・メニューの有効化

### Menu Bar ###

MenuBar.accessible_description=Swingデモ・メニュー・バー


### Frame ###

Frame.title=SwingSet2


### Tabbed Pane ###

TabbedPane.src.labelAndMnemonic=ソース・コード
TabbedPane.src_tooltip=ソース・コードの参照


### Look & Feel Menu ###

LafMenu.laf.labelAndMnemonic=ルック&&フィール(&L)
LafMenu.laf_accessible_description=ルック&&フィールを切り替えられるメニュー

LafMenu.java.labelAndMnemonic=Javaルック&&フィール(&J)
LafMenu.java_accessible_description=Javaルック&&フィール

LafMenu.nimbus.labelAndMnemonic=Nimbusルック&&フィール(&N)
LafMenu.nimbus_accessible_description=Nimbusルック&&フィール

LafMenu.mac.labelAndMnemonic=Mac OS Xルック&&フィール(&M)
LafMenu.mac_accessible_description=Mac OS Xルック&&フィール

LafMenu.motif.labelAndMnemonic=Motifルック&&フィール(&O)
LafMenu.motif_accessible_description=Motifルック&&フィール

LafMenu.windows.labelAndMnemonic=Windowsスタイル・ルック&&フィール(&W)
LafMenu.windows_accessible_description=Windowsスタイル・ルック&&フィール

LafMenu.gtk.labelAndMnemonic=GTKスタイル・ルック&&フィール(&G)
LafMenu.gtk_accessible_description=GTKスタイル・ルック&&フィール


### Themes Menu ###

ThemesMenu.themes.labelAndMnemonic=テーマ(&T)
ThemesMenu.themes_accessible_description=Metalテーマのカラー切替えメニュー

ThemesMenu.aqua.labelAndMnemonic=アクア(&Q)
ThemesMenu.aqua_accessible_description=青緑を基調としたMetalテーマ

ThemesMenu.charcoal.labelAndMnemonic=チャコール(&C)
ThemesMenu.charcoal_accessible_description=ダーク・グレーを基調としたMetalテーマ

ThemesMenu.contrast.labelAndMnemonic=ハイ・コントラスト(&H)
ThemesMenu.contrast_accessible_description=ハイ・コントラストのテーマ

ThemesMenu.ocean.labelAndMnemonic=オーシャン(&O)
ThemesMenu.ocean_accessible_description=オーシャンのMetalテーマ

ThemesMenu.steel.labelAndMnemonic=スチール(&S)
ThemesMenu.steel_accessible_description=青紫のMetalテーマ

ThemesMenu.emerald.labelAndMnemonic=エメラルド(&E)
ThemesMenu.emerald_accessible_description=緑を基調としたMetalテーマ

ThemesMenu.ruby.labelAndMnemonic=ルビー(&R)
ThemesMenu.ruby_accessible_description=赤を基調としたMetalテーマ


### Font SubMenu (under Themes)
FontMenu.fonts.labelAndMnemonic=フォント(&F)
FontMenu.fonts_accessible_description=Javaルック&フィール用のフォント選択メニュー

FontMenu.bold.labelAndMnemonic=太字(&B)
FontMenu.bold_accessible_description=Javaルック&フィールに太字フォントを使用します

FontMenu.plain.labelAndMnemonic=プレーン(&P)
FontMenu.plain_accessible_description=Javaルック&フィールにプレーン・フォントを使用します


### Audio SubMenu (under Themes) ###

AudioMenu.audio.labelAndMnemonic=オーディオ(&A)
AudioMenu.audio_accessible_description=Javaルック&フィール内での効果音の切替えメニュー

AudioMenu.on.labelAndMnemonic=時間(&O)
AudioMenu.on_accessible_description=Javaルック&フィールのすべての効果音をオンにします

AudioMenu.default.labelAndMnemonic=デフォルト(&D)
AudioMenu.default_accessible_description=Javaルック&フィールのデフォルトの効果音の設定に戻します

AudioMenu.off.labelAndMnemonic=オフ(&F)
AudioMenu.off_accessible_description=Javaルック&フィールのすべての効果音をオフにします

### Options Menu ###

OptionsMenu.options.labelAndMnemonic=オプション(&P)
OptionsMenu.options_accessible_description=オプションの選択メニュー

OptionsMenu.tooltip.labelAndMnemonic=ツール・チップの有効化(&T)
OptionsMenu.tooltip_accessible_description=ツール・チップを有効または無効にします

OptionsMenu.dragEnabled.labelAndMnemonic=ドラッグの有効化(&D)
OptionsMenu.dragEnabled_accessible_description=ドラッグを有効または無効にします

### File Menu ###

FileMenu.file.labelAndMnemonic=ファイル(&F)
FileMenu.accessible_description=ファイル・メニュー
FileMenu.about.labelAndMnemonic=情報(&B)
FileMenu.about_accessible_description=SwingSet2アプリケーションの詳細を確認します
FileMenu.open.labelAndMnemonic=開く(&O)
FileMenu.open_accessible_description=ファイルを開くためのメニュー項目
FileMenu.save.labelAndMnemonic=保存(&S)
FileMenu.save_accessible_description=ファイルを保存するためのメニュー項目
FileMenu.save_as.labelAndMnemonic=別名保存(&A)...
FileMenu.save_as_accessible_description=ファイルを別名保存するためのメニュー項目
FileMenu.exit.labelAndMnemonic=終了(&X)
FileMenu.exit_accessible_description=SwingSet2アプリケーションを終了します

### Multi-Screen menu ###
MultiMenu.multi.labelAndMnemonic=スクリーン・モード(&M)
MultiMenu.multi_accessible_description=スクリーン・メニュー
MultiMenu.all.labelAndMnemonic=マルチ・スクリーン(&A)
MultiMenu.all_accessible_description=SwingSet2のウィンドウをすべてのスクリーンに作成します
MultiMenu.single.labelAndMnemonic=シングル・スクリーン
MultiMenu.single_accessible_description=SwingSet2のウィンドウを1つのスクリーンに作成します


################################
###          DEMOS           ###
################################

### Button Demo ###

ButtonDemo.accessible_description=ButtonDemoでは、JButton、JRadioButton、JToggleButtonおよびJCheckBoxの使用例を紹介します
ButtonDemo.tooltip=JButton、JRadioButton、JToggleButton、JCheckboxデモ
ButtonDemo.name=Buttonデモ

ButtonDemo.buttons=ボタン
ButtonDemo.checkboxes=チェック・ボックス
ButtonDemo.radiobuttons=ラジオ・ボタン
ButtonDemo.togglebuttons=トグル・ボタン

ButtonDemo.textbuttons=テキスト・ボタン
ButtonDemo.imagebuttons=イメージ・ボタン
ButtonDemo.textradiobuttons=テキスト・ラジオ・ボタン
ButtonDemo.imageradiobuttons=イメージ・ラジオ・ボタン
ButtonDemo.texttogglebuttons=テキスト・トグル・ボタン
ButtonDemo.imagetogglebuttons=イメージ・トグル・ボタン
ButtonDemo.textcheckboxes=テキスト・チェック・ボックス
ButtonDemo.imagecheckboxes=イメージ・チェック・ボックス

ButtonDemo.button1=1
ButtonDemo.button2=2
ButtonDemo.button3=<html><font size=2 color=red><bold>3</font></html>

ButtonDemo.radio1=ボタン1
ButtonDemo.radio2=ボタン2
ButtonDemo.radio3=ボタン3
ButtonDemo.radioX=<html><font size=2 color=red>3<bold>(HTML)</bold></font></html>

ButtonDemo.check1=1
ButtonDemo.check2=2
ButtonDemo.check3=3
ButtonDemo.checkX=<html><font size=2 color=red>3<bold>(HTML)</bold></font></html>

ButtonDemo.customradio=カスタムの"メタリック調"ラジオ・ボタン
ButtonDemo.customcheck=カスタムの電球チェック・ボックス

ButtonDemo.phone=電話
ButtonDemo.write=書込み
ButtonDemo.peace=ピース

ButtonDemo.controlpanel.labelAndMnemonic=表示オプション:
ButtonDemo.paintborder.labelAndMnemonic=ボーダー表示(&B)
ButtonDemo.paintborder_tooltip=ここをクリックして、ボーダーの表示のオンとオフを切り替えます。
ButtonDemo.paintfocus.labelAndMnemonic=フォーカス表示(&F)
ButtonDemo.paintfocus_tooltip=ここをクリックして、フォーカスの表示のオンとオフを切り替えます。
ButtonDemo.enabled.labelAndMnemonic=有効(&E)
ButtonDemo.enabled_tooltip=ここをクリックして、ボタンを有効または無効にします。
ButtonDemo.contentfilled.labelAndMnemonic=ペイント(&I)
ButtonDemo.contentfilled_tooltip=ここをクリックして、コンテンツ・エリアをペイントするかどうかを選択します。

ButtonDemo.padamount.labelAndMnemonic=余白:
ButtonDemo.default.labelAndMnemonic=デフォルト(&D)
ButtonDemo.default_tooltip=ボーダーおよびラベルの間にデフォルトのピクセル数の余白を入れます。
ButtonDemo.zero.labelAndMnemonic=&0
ButtonDemo.zero_tooltip=ボーダーおよびラベルの間に余白を入れません。
ButtonDemo.ten.labelAndMnemonic=&10
ButtonDemo.ten_tooltip=ボーダーおよびラベルの間に10ピクセルの余白を入れます。

LayoutControlPanel.textposition.labelAndMnemonic=テキスト位置:
LayoutControlPanel.contentalignment.labelAndMnemonic=コンテンツ位置合せ:

### ColorChooser Demo ###

ColorChooserDemo.accessible_description=ColorChooserを使用すると、パレットから色を選択したり、RGB値またはHSB値を直接指定できます
ColorChooserDemo.tooltip=JColorChooserデモ
ColorChooserDemo.name=ColorChooserデモ
ColorChooserDemo.chooser_title=色の選択
ColorChooserDemo.background=背景
ColorChooserDemo.grad_a=グラデーション基本色1
ColorChooserDemo.grad_b=グラデーション基本色2
ColorChooserDemo.outer_line=境界線
ColorChooserDemo.cup=Javaのトレードマークであるコーヒー・カップのイメージ

### ComboBox Demo ###

ComboBoxDemo.accessible_description=このデモでは、JComboBoxコンポーネントの使用例を紹介します。
ComboBoxDemo.tooltip=JComboBoxデモ
ComboBoxDemo.name=ComboBoxデモ

ComboBoxDemo.hair=髪
ComboBoxDemo.eyes=目
ComboBoxDemo.mouth=口
ComboBoxDemo.presets=プリセット:

ComboBoxDemo.preset1=フィリップ, ハワード, ジェフ
ComboBoxDemo.preset2=ジェフ, ラリー, フィリップ
ComboBoxDemo.preset3=ハワード, スコット, ハンス
ComboBoxDemo.preset4=フィリップ, ジェフ, ハンス
ComboBoxDemo.preset5=ブレント, ジョン, スコット
ComboBoxDemo.preset6=ララ, ラリー, リサ
ComboBoxDemo.preset7=ジェームス ,フィリップ, マイケル
ComboBoxDemo.preset8=フィリップ, リサ, ブレント
ComboBoxDemo.preset9=ジェームス, フィリップ, ジョン
ComboBoxDemo.preset10=ララ, ジョン, スコット


ComboBoxDemo.hair_description=髪:
ComboBoxDemo.eyes_description=目と鼻:
ComboBoxDemo.mouth_description=口:

ComboBoxDemo.amy=エイミー
ComboBoxDemo.brent=ブレント
ComboBoxDemo.georges=ジョルジュ
ComboBoxDemo.hans=ハンス
ComboBoxDemo.howard=ハワード
ComboBoxDemo.james=ジェームス
ComboBoxDemo.jeff=ジェフ
ComboBoxDemo.jon=ジョン
ComboBoxDemo.lara=ララ
ComboBoxDemo.larry=ラリー
ComboBoxDemo.lisa=リサ
ComboBoxDemo.michael=マイケル
ComboBoxDemo.philip=フィリップ
ComboBoxDemo.scott=スコット

### FileChooser Demo ###

FileChooserDemo.accessible_description=FileChooserを使用すると、開くファイルまたは作成および保存するファイルを選択できます。
FileChooserDemo.tooltip=JFileChooserデモ
FileChooserDemo.name=FileChooserデモ

FileChooserDemo.plainbutton=標準のJFileChooserの表示
FileChooserDemo.previewbutton=プレビュー付きJFileChooserの表示
FileChooserDemo.custombutton=カスタマイズしたJFileChooserの表示

FileChooserDemo.description=<html>&&nbsp &&nbspコンポーネントを好きなだけ使用して、独自のFileChooserを簡単に<br>&&nbsp &&nbsp作成することができます。</html>

FileChooserDemo.filterdescription=JPEGおよびGIF画像ファイル

FileChooserDemo.nofileselected=最初にファイルを選択してください。
FileChooserDemo.thefile=ファイル名:
FileChooserDemo.isprobably=はおそらく画像データです。

FileChooserDemo.helptext=<html>検索: ファイルを検索します。<br>詳細: ファイルについてさらに学習します。<br>OK: ファイルを選択します。<br>取消: 何もせずにこのダイアログを閉じます。</html>

FileChooserDemo.findquestion=ファイルの検索:
FileChooserDemo.findresponse=<html><center>あなた、本当に私にファイルを検索してほしいと思ってるんですか。<br>そんなことできないですよ、やり方知らないんですから。私はただのデモ・プログラムですよ。</center></html>

FileChooserDemo.dialogtitle=カスタマイズしたFileChooser
FileChooserDemo.help=ヘルプ
FileChooserDemo.find=検索
FileChooserDemo.ok=OK
FileChooserDemo.about=詳細
FileChooserDemo.cancel=取消

### Html Demo ###

HtmlDemo.accessible_description=このデモでは、JEditorPaneコンポーネントでHTMLテキストがどのように表示されるかを紹介します。
HtmlDemo.tooltip=JEditorPane HTMLデモ
HtmlDemo.name=JEditorPane HTMLデモ
HtmlDemo.filename=swing.html


### Internal Frame Demo ###

InternalFrameDemo.accessible_description=JInternalFrameデモ
InternalFrameDemo.create_frames.labelAndMnemonic=カスタマイズされた内部フレームの作成
InternalFrameDemo.title_text_field.labelAndMnemonic=フレームのタイトル:
InternalFrameDemo.frame.labelAndMnemonic=フレーム
InternalFrameDemo.palette.labelAndMnemonic=内部フレームの作成
InternalFrameDemo.name=InternalFrameデモ
InternalFrameDemo.tooltip=JInternalFrameデモ
InternalFrameDemo.closable.labelAndMnemonic=クローズ可
InternalFrameDemo.resizable.labelAndMnemonic=サイズ変更可
InternalFrameDemo.iconifiable.labelAndMnemonic=最小化可
InternalFrameDemo.maximizable.labelAndMnemonic=最大化可
InternalFrameDemo.toast=乾杯
InternalFrameDemo.duke=猊下
InternalFrameDemo.duchess=公爵夫人
InternalFrameDemo.cab=Anyone need a Taxi?


### List Demo ###

ListDemo.accessible_description=JListデモ
ListDemo.name=Listデモ
ListDemo.tooltip=JListデモ
ListDemo.prefixes=プリフィクス
ListDemo.suffixes=サフィクス
ListDemo.count.labelAndMnemonic=生成されたリスト・エントリの数:
ListDemo.all=すべて
ListDemo.none=なし
ListDemo.red=赤色の会社ロゴ・イメージ
ListDemo.yellow=赤色の会社ロゴ・イメージ
ListDemo.blue=青色の会社ロゴ・イメージ
ListDemo.gray=グレーの会社ロゴ・イメージ
ListDemo.green=緑色の会社ロゴ・イメージ
ListDemo.magenta=マゼンタの会社ロゴ・イメージ
ListDemo.cyan=シアンの会社ロゴ・イメージ
ListDemo.description=<html><P STYLE="margin-left: .25in; margin-right: .25in">このデモでは、2つの異なる方法で作成したリストを紹介します。左側にある<b>JList</b>コンポーネントのリスト項目は、チェック・マークの付けられたプレフィックスおよびサフィクスの順列で構成されています。右側のプレフィックスおよびサフィクスのチェック・ボックスの列は、垂直配置の<b>BoxLayout</b>を持つ<b>JPanel</b>を使用して<b>JScrollPane</b>内に作成されます。</P></html>


### OptionPane Demo ###

OptionPaneDemo.accessible_description=OptionPaneデモでは、様々な共通のオプション・ダイアログ・ボックスを生成するためのJOptionPaneの使用例を紹介します
OptionPaneDemo.tooltip=JOptionPaneデモ
OptionPaneDemo.name=OptionPaneデモ

OptionPaneDemo.warningbutton=警告ダイアログの表示
OptionPaneDemo.componentbutton=コンポーネント・ダイアログの表示
OptionPaneDemo.inputbutton=入力ダイアログの表示
OptionPaneDemo.confirmbutton=確認ダイアログの表示
OptionPaneDemo.messagebutton=メッセージ・ダイアログの表示

OptionPaneDemo.warningtitle=警告ダイアログの例
OptionPaneDemo.warningtext=<html><P><font color=black>これは<font color=red><b>緊急放送システム</b></font>のテストです。<i><b>これは単なる<br>テストです</b></i>。ローカル・イントラネットのWebマスターが<br><font color=blue><b>連邦政府</b></font>および<font color=blue><b>州</b></font>当局と自主的に協力し、緊急事態の<br>発生時に通報を行うためにこのシステムを開発しました。<br>実際の緊急時には、お聞きになった信号に続いて当局からの<br>情報、ニュースまたは指示が通知されます。これで、<br><font color=red><b>緊急放送システム</b></font></font>のテストを<br>終了します。</P><P><br>開発者向けのノート: このダイアログのデモでは、テキストのフォーマットにHTMLが使用されています。</P></html>

OptionPaneDemo.messagetext=瓶に入れたメッセージ

OptionPaneDemo.confirmquestion=今日の外の天気は晴れですか。
OptionPaneDemo.confirmyes=<html>コンピュータで遊んでないで外に出よう。<br>ビーチに行って太陽の日を浴びたらどうでしょう。</html>
OptionPaneDemo.confirmno=屋内にいて様々なものから保護されているのはいいことです。

OptionPaneDemo.inputquestion=好きな映画は何ですか。
OptionPaneDemo.inputresponse=それはいい映画ですね。

OptionPaneDemo.componenttitle=コンポーネント・ダイアログの例
OptionPaneDemo.componentmessage=<html>JOptionPaneには、テキスト・フィールドなどのコンポーネントを必要なだけ含めることができます。</html>
OptionPaneDemo.componenttextfield=コンボボックス:
OptionPaneDemo.component_cb1=項目1
OptionPaneDemo.component_cb2=項目2
OptionPaneDemo.component_cb3=項目3
OptionPaneDemo.componentmessage2=<html>また、JOptionPaneには必要な数だけオプションを<br>含めることができます。</html>
OptionPaneDemo.component_op1=はい
OptionPaneDemo.component_op2=いいえ
OptionPaneDemo.component_op3=そうかもしれない
OptionPaneDemo.component_op4=たぶん
OptionPaneDemo.component_op5=取消

OptionPaneDemo.component_r1=明るくて楽観的。いい選択ですね。
OptionPaneDemo.component_r2=まったく違います。私ならそんなことはしません。
OptionPaneDemo.component_r3=<html><font color=black>ええと、はい。現時点では状況がはっきりしません。<br>はっきりと決まったら教えてください。</font></html>
OptionPaneDemo.component_r4=<html><font color=black>そうしたいのはわかっているはずです。一発勝負を<br>かけて「はい」を押すべきでした。</font></html>

### ProgressBar Demo ###

ProgressBarDemo.accessible_description=このデモでは、JprogressBarコンポーネントの使用例を紹介します。
ProgressBarDemo.tooltip=JProgressBarデモ
ProgressBarDemo.name=ProgressBarデモ
ProgressBarDemo.start_button=テキストのロード開始
ProgressBarDemo.stop_button=テキストのロード停止
ProgressBarDemo.accessible_text_loading_progress=テキストのロード中
ProgressBarDemo.accessible_text_area_name=ロード中のテキスト

ProgressBarDemo.accessible_text_area_description=このJTextAreaには、テキストが一度に1文字ずつバッファから埋め込まれています。ウィンドウの下部にあるプログレス・バーに、ロード処理の進捗が表示されます

ProgressBarDemo.text=無限の猿が無限数のタイプライタで入力し続ければ、いつかは人類の偉大な作品ができあがると俗にいわれています。\n現在の高速処理コンピュータを使用すれば、この理論をテスト\nできます... \n\n\tLzskd jfy 92y;ho4 th;qlh sd 6yty;q2 hnlj 8sdf. Djfy 92y;ho4, th;qxhz d7yty; \n\tQ0hnlj 23&&^ (# ljask djf y92y; fy92y; Sd6y ty;q2h nl jk la gfa harvin garvel\n\tlasdfsd a83sl la8z ks8l 92y;ho4 th;qlh sd 6yty;q2 hnlj 8sdf. Djfy 92y;ho4,\n\tth;qxhz d7yty; Q0hnlj 23&&^ nknod mrs88 jsd79lfm#%$JLaoz6df  lso7dj f2 jfls\n\t67d9ol1@2fou99s  1lkj2 @l.k1  2; a89o7aljf  1l3i7ou8 d8l3 lqwerty0092 #1!\n\tja9o do8lkjj139rojsd9**!l6*hd # ljasd78 l2awkjad78  3ol7asljf 3 ldif && l.js\n\tLl ls ewan la8uj 23lll7u 8l  3h hhxx8 8d  lsd fixx 891lkjno99sl d8l@@@!!8#8\n\tdfoil jarooda mklaoorj nowai the smisthliylka jkdlfjiw ladajadra lthhheeejfjl\n\tdkddooolda bub mirznod of the koojgaf!! But 2 be or not to be... that is the\n\tquestion. Then when shall we three meet again In thunder, lightning, or in\n\train? When the hurlyburly's done, When the battle's lost and won. That will\n\tbe ere the set of sun. Where the place? Upon the heath. There to meet with\n\tMacbeth. But hath forth not to want.....  a banana, or to be.... a banana.\n\tBanana, I knew him banana. Banana banana. Banana banana banana banana.\n\n\n\n\nWell... hmm.... it seemed like a good idea...


### ScrollPane Demo ###

ScrollPaneDemo.accessible_description=JScrollPaneデモ
ScrollPaneDemo.name=ScrollPaneデモ
ScrollPaneDemo.tooltip=JScrollPaneデモ
ScrollPaneDemo.crayons=たくさんのクレヨン
ScrollPaneDemo.colheader=列ヘッダー
ScrollPaneDemo.rowheader=行ヘッダー
ScrollPaneDemo.upperleft=左上コーナー
ScrollPaneDemo.upperright=右上の列ヘッダー・コーナー
ScrollPaneDemo.lowerleft=左下の行ヘッダー・コーナー


### Slider Demo ###

SliderDemo.accessible_description=このデモでは、JSliderコンポーネントの使用例を紹介します。
SliderDemo.tooltip=JSliderデモ
SliderDemo.name=Sliderデモ

SliderDemo.slidervalue=Sliderの値:
SliderDemo.horizontal=水平
SliderDemo.vertical=垂直
SliderDemo.plain=プレーン
SliderDemo.a_plain_slider=プレーンのスライダ
SliderDemo.majorticks=大目盛
SliderDemo.majorticksdescription=大目盛を持つスライダ
SliderDemo.ticks=大小目盛とラベル(SnapToTicks=true)
SliderDemo.minorticks=小目盛
SliderDemo.minorticksdescription=SnapToTicks=trueで大目盛、小目盛およびラベル付きのスライダ
SliderDemo.disabled=無効
SliderDemo.disableddescription=大小の目盛を持つ無効なスライダ(操作不可)

### SplitPane Demo ###

SplitPaneDemo.accessible_description=JSplitPaneデモ
SplitPaneDemo.name=SplitPaneデモ
SplitPaneDemo.tooltip=JSplitPaneデモ
SplitPaneDemo.earth=地球
SplitPaneDemo.moon=宇宙飛行士
SplitPaneDemo.vert_split.labelAndMnemonic=垂直分割(&V)
SplitPaneDemo.horz_split.labelAndMnemonic=水平分割(&R)
SplitPaneDemo.cont_layout.labelAndMnemonic=連続したレイアウト(&C)
SplitPaneDemo.one_touch_expandable.labelAndMnemonic=ワンタッチ拡張機能(&O)
SplitPaneDemo.divider_size.labelAndMnemonic=ディバイダのサイズ(&Z)
SplitPaneDemo.invalid_divider_size=無効なディバイダのサイズ
SplitPaneDemo.error=エラー
SplitPaneDemo.first_component_min_size.labelAndMnemonic=最初のコンポーネントの最小サイズ(&I)
SplitPaneDemo.second_component_min_size.labelAndMnemonic=2つ目のコンポーネントの最小サイズ(&N)
SplitPaneDemo.invalid_min_size=無効な最小サイズ
SplitPaneDemo.must_be_greater_than=次の数より大きな値を指定してください


### TabbedPane Demo ###

TabbedPaneDemo.accessible_description=このデモでは、JTabbedPaneコンポーネントの使用例を紹介します。
TabbedPaneDemo.tooltip=JTabbedPaneデモ
TabbedPaneDemo.name=TabbedPaneデモ

TabbedPaneDemo.bounce=<html><font color=blue><bold><center>元気な子供達。</center></bold></font></html>
TabbedPaneDemo.stephen=スティーヴン
TabbedPaneDemo.david=デイヴィッド
TabbedPaneDemo.matthew=マシュー
TabbedPaneDemo.ewan=ユアン
TabbedPaneDemo.blake=ブレイク
TabbedPaneDemo.brooke=ブルック
TabbedPaneDemo.laine=レイン
TabbedPaneDemo.hania=ハニア

TabbedPaneDemo.label=タブ配置:
TabbedPaneDemo.top=上
TabbedPaneDemo.bottom=下
TabbedPaneDemo.left=左
TabbedPaneDemo.right=右


### Table Demo ###

TableDemo.accessible_description=JTableデモ
TableDemo.name=Tableデモ
TableDemo.tooltip=JTableデモ
TableDemo.all_columns=すべての列
TableDemo.autoresize_mode=サイズ自動変更モード
TableDemo.cell_selection=セルの選択
TableDemo.column_boundaries=列の境界
TableDemo.column_selection=列の選択
TableDemo.horz_lines=水平線
TableDemo.intercell_spacing=セル間のスペース
TableDemo.intercell_spacing_colon=セル間のスペース:
TableDemo.last_column=最後の列
TableDemo.multiple_ranges=複数の範囲
TableDemo.one_range=1つの範囲
TableDemo.reordering_allowed=並替えを許可
TableDemo.row_height=行の高さ
TableDemo.row_height_colon=行の高さ:
TableDemo.row_selection=行の選択
TableDemo.selection_mode=選択モード
TableDemo.subsequent_columns=後続の列
TableDemo.vert_lines=垂直線
TableDemo.single=シングル
TableDemo.none=なし
TableDemo.off=オフ
TableDemo.first_name=名
TableDemo.last_name=姓
TableDemo.favorite_color=好きな色
TableDemo.favorite_food=好きな食べ物
TableDemo.favorite_movie=好きな映画
TableDemo.favorite_number=好きな数
TableDemo.aqua=アクア
TableDemo.beige=ベージュ
TableDemo.black=黒
TableDemo.blue=青
TableDemo.cybergreen=サイバー・グリーン
TableDemo.darkgreen=ダーク・グリーン
TableDemo.eblue=メタリック・ブルー
TableDemo.jfcblue=JFCプライマリ
TableDemo.jfcblue2=JFCセカンダリ
TableDemo.forestgreen=フォレスト・グリーン
TableDemo.gray=灰色
TableDemo.green=緑
TableDemo.orange=オレンジ
TableDemo.purple=紫
TableDemo.red=赤
TableDemo.rustred=赤煉瓦色
TableDemo.sunpurple=Sunパープル
TableDemo.suspectpink=ピンク
TableDemo.turquoise=ターコイズ
TableDemo.violet=すみれ色
TableDemo.yellow=黄色
TableDemo.2001=2001年宇宙の旅
TableDemo.buckaroo=バカルー・バンザイの8次元ギャラクシー
TableDemo.firstsight=あなたが見えなくても
TableDemo.airplane=フライング・ハイ(シリーズ)
TableDemo.aliens=エイリアン
TableDemo.bicycle=自転車泥棒
TableDemo.bladerunner=ブレード・ランナー(ディレクターズ・カット)
TableDemo.bluesbros=ブルース・ブラザース
TableDemo.brazil=未来世紀ブラジル
TableDemo.bugs=バグズ・ライフ
TableDemo.city=ロスト・チルドレン
TableDemo.chusingura=忠臣蔵
TableDemo.clock=時計仕掛けのオレンジ
TableDemo.curse=怪奇ミイラ男
TableDemo.dasboot=Uボート
TableDemo.dazed=バッド・チューニング
TableDemo.defending=あなたの死後にご用心
TableDemo.eraserhead=イレイザ・ヘッド
TableDemo.fifthelement=フィフス・エレメント
TableDemo.goodfellas=グッド・フェローズ
TableDemo.harold=ハロルドとモード
TableDemo.joyluck=ジョイ・ラック・クラブ
TableDemo.jules=突然炎のごとくジュールとジム
TableDemo.ladyvanishes=レディ・バニッシュ/暗号を歌う女
TableDemo.mohicans=ラスト・オブ・モヒカン
TableDemo.lonestar=真実の囁き
TableDemo.man=知りすぎていた男
TableDemo.musicman=ザ・ミュージック・マン
TableDemo.dog=マイ・ライフ・アズ・ア・ドッグ
TableDemo.oncewest=ウエスタン
TableDemo.pulpfiction=パルプ・フィクション
TableDemo.raiders=レイダース/失われたアーク(聖櫃)
TableDemo.reservoir=レザボア・ドッグス
TableDemo.repoman=レポ・マン
TableDemo.spinaltap=スパイナル・タップ
TableDemo.schindlerslist=シンドラーのリスト
TableDemo.starwars=スター・ウォーズ
TableDemo.stuntman=スタントマン
TableDemo.thinman=影なき男
TableDemo.withnail=ウィズ・ネイルと僕
TableDemo.labyrinth=ラビリンス/魔王の迷宮
TableDemo.shawshank=ショーシャンクの空に
TableDemo.apple=りんご
TableDemo.asparagus=アスパラガス
TableDemo.banana=バナナ
TableDemo.broccoli=ブロッコリ
TableDemo.carrot=ニンジン
TableDemo.cantaloupe=メロン
TableDemo.corn=とうもろこし
TableDemo.grapes=ぶどう
TableDemo.grapefruit=グレープフルーツ
TableDemo.kiwi=キウイ・フルーツ
TableDemo.onion=玉ねぎ
TableDemo.pear=洋なし
TableDemo.peach=桃
TableDemo.pepper=とうがらし
TableDemo.pickle=ピクルス
TableDemo.pineapple=パイナップル
TableDemo.raspberry=ラスベリ
TableDemo.sparegrass=アスパラガス
TableDemo.strawberry=いちご
TableDemo.tomato=トマト
TableDemo.watermelon=すいか

TableDemo.printing=印刷メニュー
TableDemo.fitWidth=横幅に合わせる
TableDemo.print=印刷
TableDemo.header=ヘッダー

# This string will be formatted by a MessageFormat and
# printed at the top of each page of the printed result.
# You can use {0} to insert a page number.
TableDemo.headerText=JTable印刷

TableDemo.footer=フッター

# This string will be formatted by a MessageFormat and
# printed at the bottom of each page of the printed result.
# You can use {0} to insert a page number.
TableDemo.footerText={0}ページ

TableDemo.printingResult=印刷結果
TableDemo.printingComplete=印刷完了
TableDemo.printingCancelled=印刷の取消

# This string will be formatted by a MessageFormat and
# and displayed when an exception occurs.
# {0} is used to place details of the exception.
TableDemo.printingFailed=印刷エラー: {0}


### ToolTip Demo ###

ToolTipDemo.accessible_description=ToolTipは、コンポーネントについての簡単な説明を表示します。
ToolTipDemo.accessible_cow=これは乳牛です
ToolTipDemo.tooltip=ToolTipデモ
ToolTipDemo.name=ToolTipデモ
ToolTipDemo.bessie=雌牛のエリザベス
ToolTipDemo.cow=乳牛
ToolTipDemo.got_milk=牛乳飲んだ?
ToolTipDemo.tail=しっぽ
ToolTipDemo.moo=モォォォォ!
ToolTipDemo.tooltip_features=<html>もしやあなたは、ツール・チップは「1行のプレイン・テキスト」しか<p>表示できない退屈なものだなんて思ってやしませんか。<p>だとしたら、私たち<font color=blue size=+2>Swing!</font>チームがその誤解を解いてあげましょう。<p>SwingのToolTipは、HTMLを使用して<ul><li>Listを持ったり、<li><b>太字</b>にしたり、<li><em>イタリック</em>にしたり、<li>文字に<font color=red>色</font>を付けたり、<li><font size=+3>サイズ</font>を変えたり、<li><font face=AvantGarde>フォント</font>を変えたり、</ul>そうそう、もちろん複数行にすることもできちゃうのです。ねっ。</html>


### Tree Demo ###

TreeDemo.accessible_description=このデモでは、JTreeコンポーネントの使用例を紹介します。
TreeDemo.tooltip=JTreeデモ
TreeDemo.name=Treeデモ
TreeDemo.music=音楽
