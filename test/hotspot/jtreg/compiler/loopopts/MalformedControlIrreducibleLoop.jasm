/*
 * Copyright (c) 2023, Red Hat, Inc. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */

super public class MalformedControlIrreducibleLoop
	version 52:0
{
  public Method "<init>":"()V"
	stack 1 locals 1
  {
		aload_0;
		invokespecial	Method java/lang/Object."<init>":"()V";
		return;
  }
  /* same as:
      public static void actualTest(int flag) {
        int i = 1;
        int j = 1;
        if (flag == 2) {
            // goto second_entry;
        }
        loop:
        for (;;) {
            i = 1;
            // second_entry:
            do {
                if (i == 1) {
                    continue loop; // goto loop
                }
                i *= 2;
                j *= 2;
            } while (j < 2);
            break;
        }
    }
  */
  public static Method actualTest:"(I)V"
	stack 2 locals 3
  {
		iconst_1;
		istore_1;
		iconst_1;
		istore_2;
		iload_0;
		iconst_2;
		if_icmpne	L11;
	L9:	stack_frame_type append;
		locals_map int, int;
		iconst_1;
		istore_1;
	L11:	stack_frame_type same;
		iload_1;
		iconst_1;
		if_icmpeq	L9;
	L19:	stack_frame_type same;
		iload_1;
		iconst_2;
		imul;
		istore_1;
		iload_2;
		iconst_2;
		imul;
		istore_2;
		iload_2;
		iconst_2;
		if_icmplt	L11;
		goto	L35;
	L35:	stack_frame_type same;
		return;
  }

} // end Class TestMalformedControlIrreducibleLoop
