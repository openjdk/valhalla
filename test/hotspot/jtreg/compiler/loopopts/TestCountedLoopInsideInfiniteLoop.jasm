/*
 * Copyright (c) 2023, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */

super public class TestCountedLoopInsideInfiniteLoop
{
    public Method "<init>":"()V"
    stack 2 locals 1
    {
        aload_0;
        invokespecial  Method java/lang/Object."<init>":"()V";
        return;
    }
    static Method test:"(IIII)V"
    stack 200 locals 4
    {
        iload      0; // arg0 == 0
        ifeq LEND;

    LOOP1: // counted loop to kick off beautify_loops
        iload      1;
        ifeq LOOP1;
        iload      2;
        ifle LOOP1;

    LOOP2: // infinite loop (still Region)
        goto LOOP2b;

    LOOP2b: // counted loop (still Region)
        iinc       3, -1;
        iload      3;
        ifgt LOOP2b;

        iconst_0;
        ifeq LOOP2; // always true
        goto LOOP2b;

    LEND:
        return;
    }
}
