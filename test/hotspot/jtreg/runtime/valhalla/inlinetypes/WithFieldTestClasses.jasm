/*
 * Copyright (c) 2022, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 *
 */

public final primitive value class runtime/valhalla/inlinetypes/WithFieldPoint
    version 63:0
{

    private final Field x:I;
    private final Field y:I;

    public static Method make:"(II)Qruntime/valhalla/inlinetypes/WithFieldPoint;"
        stack 4
    {
        aconst_init runtime/valhalla/inlinetypes/WithFieldPoint;
        dup;
        iconst_0;
        iconst_0;
        invokevirtual checkFields:"(II)V";

        iload_0;
        withfield x:I;
        dup;
        iload_0;
        iconst_0;
        invokevirtual checkFields:"(II)V";

        iload_1;
        withfield y:I;
        dup;
        iload_0;
        iload_1;
        invokevirtual checkFields:"(II)V";

        areturn;
    }

    public Method getX:"()I" stack 1 {
        aload_0;
        getfield x:I;
        ireturn;
    }

    public Method getY:"()I" stack 1 {
        aload_0;
        getfield y:I;
        ireturn;
    }

    public Method withX:"(I)Qruntime/valhalla/inlinetypes/WithFieldPoint;" stack 2 {
        aload_0;
        iload_1;
        withfield x:I;
        areturn;
    }

    public Method withY:"(I)Qruntime/valhalla/inlinetypes/WithFieldPoint;" stack 2 {
        aload_0;
        iload_1;
        withfield y:I;
        areturn;
    }

    public Method checkFields:"(II)V" stack 3 {
        aload_0;
        getfield x:I;
        invokestatic java/lang/Integer.valueOf:"(I)Ljava/lang/Integer;";
        iload_1;
        invokestatic java/lang/Integer.valueOf:"(I)Ljava/lang/Integer;";
        ldc "invalid x value";
        invokestatic jdk/test/lib/Asserts.assertEquals:"(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V";

        aload_0;
        getfield y:I;
        invokestatic java/lang/Integer.valueOf:"(I)Ljava/lang/Integer;";
        iload_2;
        invokestatic java/lang/Integer.valueOf:"(I)Ljava/lang/Integer;";
        ldc "invalid y value";
        invokestatic jdk/test/lib/Asserts.assertEquals:"(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V";

        return;
    }

}

public final primitive value class runtime/valhalla/inlinetypes/AllTypes
    version 63:0
{

    public final Field z:Z;
    public final Field b:B;
    public final Field s:S;
    public final Field c:C;
    public final Field i:I;
    public final Field l:J;
    public final Field f:F;
    public final Field d:D;
    public final Field o:"Ljava/lang/Object;";
    public final Field p:"Qruntime/valhalla/inlinetypes/Point;";

    public Method set_z:"(Z)Qruntime/valhalla/inlinetypes/AllTypes;" stack 2 {
        aload_0;
        iload_1;
        withfield z:Z;
        areturn;
    }

    public Method set_b:"(B)Qruntime/valhalla/inlinetypes/AllTypes;" stack 2 {
        aload_0;
        iload_1;
        withfield b:B;
        areturn;
    }

    public Method set_s:"(S)Qruntime/valhalla/inlinetypes/AllTypes;" stack 2 {
        aload_0;
        iload_1;
        withfield s:S;
        areturn;
    }

    public Method set_c:"(C)Qruntime/valhalla/inlinetypes/AllTypes;" stack 2 {
        aload_0;
        iload_1;
        withfield c:C;
        areturn;
    }

    public Method set_i:"(I)Qruntime/valhalla/inlinetypes/AllTypes;" stack 2 {
        aload_0;
        iload_1;
        withfield i:I;
        areturn;
    }

    public Method set_l:"(J)Qruntime/valhalla/inlinetypes/AllTypes;" stack 3 {
        aload_0;
        lload_1;
        withfield l:J;
        areturn;
    }

    public Method set_f:"(F)Qruntime/valhalla/inlinetypes/AllTypes;" stack 2 {
        aload_0;
        fload_1;
        withfield f:F;
        areturn;
    }

    public Method set_d:"(D)Qruntime/valhalla/inlinetypes/AllTypes;" stack 3 {
        aload_0;
        dload_1;
        withfield d:D;
        areturn;
    }

    public Method set_o:"(Ljava/lang/Object;)Qruntime/valhalla/inlinetypes/AllTypes;" stack 2 {
        aload_0;
        aload_1;
        withfield o:"Ljava/lang/Object;";
        areturn;
    }

    public Method set_p:"(Qruntime/valhalla/inlinetypes/Point;)Qruntime/valhalla/inlinetypes/AllTypes;" stack 2 {
        aload_0;
        aload_1;
        withfield p:"Qruntime/valhalla/inlinetypes/Point;";
        areturn;
    }

}
