/*
 * Copyright (c) 2025, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */

class UninitializedAcmp version 69:0
{
  Method       "<init>":"()V"
    stack 5  locals 1
  {
         aload_0;
         invokespecial     Method java/lang/Object."<init>":"()V";
         aload_0;
   L1:   new               class java/lang/Object;
         dup;
         dup;
         dup;
         if_acmpne         L18;
         nop;
  L18:   stack_frame_type  full;
           locals_map      class UninitializedAcmp;
           stack_map       class UninitializedAcmp, at L1, at L1;
         invokespecial     Method java/lang/Object."<init>":"()V";
         return;
  }
} // end Class UninitializedAcmp
